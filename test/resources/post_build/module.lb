
def init(module):
	module.name = "module"
	module.description = ""

def prepare(module, options):
	module.add_option(BooleanOption("fail", "Exit after validate", False))
	return True

def validate(env):
	print("Validate")
	if env["::fail"]:
		raise ValidateException("Error during validate step!")

def build(env):
	env.append_metadata("include_path", "src")
	env.append_metadata("include_path", "src")
	env.append_metadata("include_path", "src2")

	env.append_metadata_unique("required_libraries", "test")
	env.append_metadata_unique("required_libraries", "test")
	env.append_metadata_unique("required_libraries", "test2")

def post_build(env, log):
	print("Post-Build")
